image channels: 

CH0 = G
CH1 = B
CH2 = NIR
CH3 = R


plantcv requires background image
don't think plantcv is necessary, trying NDVI

NDVI 
(NIR - R)/(NIR + R)

NDVI doesn't really work

trying blue filter, works ok. it misses some stuff but does ok

experiment changes at 13_39_22, either image or experiment rotates and the triangle is erased
emailed rachel

rgb image looks kinda garbage, not sure why. tried all the r,g,b orders and r,g,b looks most normal


exclude 8 frames prior to stress time (8_57)


koppal says blue filter looks good


labels csv creator is done
now setup dataloader


3/3/21
change csv / dataloader layout: 

index   img_name        time    stress  channel
0       ...ch0.tiff     N       M       G
1       ...ch1.tiff     N       M       B
2       ...ch2.tiff     N       M       NIR
3       ...ch3.tiff     N       M       R
4       ...ch0.tiff     N+1     M+1     G
5       ...ch1.tiff     N+1     M+1     B
...     ...             ...     ...     ...

index   img_name        time    stress  channel

0       [...ch0.tiff,   N       M       [G,
         ...ch1.tiff,                    B,
         ...ch2.tiff,                    NIR,
         ...ch3.tiff]                    R]

1       ...             N+1     M+1     ...


3/8/21
finished updating labeling layout from 3/3
now test dataloader class. want to ask for one sample, returns 4 tiffs, array of channels, 
time image was taken wrt experiment start, and time since stress

4/3/21
dataloader outputs goodly, need to test applying a mask? 

formatting question: should a binary mask matrix be passed to the Mask class or should it be generated automatically inside the class? 

3:21- idk how it happened but it looks like my work to construct the image part of the sample dict is gone. might have a copy on my home machine. :((
this is the kick in the pants to bootstrap git for this project. idk why i didnt at the jump. just emailed koppal about whether focus lab has a git. 

8:19- fixed it. had a backup on home machine. blue mask is working. next step is masking control quadrant. i think best soln is two mask classes: b_mask and ctrl_mask or the like. then compose both. maybe theres a different way to handle the control masking. not sure. 
maybe the control quadrant needs separate entries in the dataset.  

4/4/21:
goal: get everything on github and implement control mask class

4/15/21: 
goal: implement dataloader idea with following format: 

top layer: N experiment [0:3], this is each of the plates of the experiment. treating each plate as it's own experiment. 
after selecting an experiment you get the previous format. 
{images: [mxnx4 nparray], time since experiment start: int, time since stress: int: channel array: [G,B,NIR,R]}

this is really just adding an additional layer st instead of getting the raw images you get the image of the plate. 

4/16/21: 
fixed a small bug with the blue_threshold 
tested splitting image strictly along 4 quadrants. works on one test image but I should try a batch to make sure it works throughout experiment. 

4/18/21: 
idea: if we are treating each slide as an experiment, what if when conducting the experiment they are stressed at different times. ie plate 1 @ 30 mins, plate 2 @ 1 hr, plate 3 @ 1.5 or 2 hrs. idk if that would help reduce algorithm dependence on stress time vs experiment time 

fixed match case syntax error, replaced with if/elif chain. may be problem with mask erasing entire img. more testing needed


5/3/21: 
installed project on focuslab cluster
densenet time? 

6/4/21: 
fixed git issue, everything is current now. 
